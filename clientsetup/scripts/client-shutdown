#!/bin/bash

#Copyright (C) 2013 Robin McCorkell

#This file is part of Karoshi Client.
#
#Karoshi Client is free software: you can redistribute it and/or modify
#it under the terms of the GNU Affero General Public License as published by
#the Free Software Foundation, either version 3 of the License, or
#(at your option) any later version.
#
#Karoshi Client is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU Affero General Public License for more details.
#
#You should have received a copy of the GNU Affero General Public License
#along with Karoshi Client.  If not, see <http://www.gnu.org/licenses/>.

#The Karoshi Team can be contacted either at mpsharrad@karoshi.org.uk or rmccorkell@karoshi.org.uk
#
#Website: http://www.karoshi.org.uk

source /opt/karoshi/clientsetup/utilities/common

function sendXNotifications {
	minute_string=$"minutes"
	if [[ $1 -eq 1 ]]; then
		minute_string=$"minute"
	fi

	echo "Sending shutdown notification - $1 $minute_string"

	while read -r x_display; do
		export DISPLAY=":${x_display##*/X}"
		is_valid=false
		environ_list=( $(find /proc -mindepth 1 -maxdepth 2 -name environ) )
		for environ in "${environ_list[@]}"; do
			if [[ -f "$environ" ]] && grep -qz "^DISPLAY=.*$DISPLAY\(\..*\)\?$" "$environ"; then
				export XAUTHORITY="$(grep -z '^XAUTHORITY=.*' "$environ" | sed 's@^XAUTHORITY=@@')"
				if ! [[ $XAUTHORITY ]]; then
					export XAUTHORITY=$(getent passwd $(stat -c %U "$environ") | cut -d':' -f6)/.Xauthority
				fi
				if xhost &>/dev/null; then
					is_valid=true
					break
				fi
			fi
		done
		if $is_valid; then
			echo "Found valid XAUTHORITY: $XAUTHORITY for $DISPLAY"
			notify-send -u critical $"Karoshi Scheduled Shutdown" $"This system is going down in $1 $minute_string"$'\n'$"Make sure to save your work!" -i karoshi-logo
		else
			echo "Unable to find XAUTHORITY for $DISPLAY"
		fi
		#Reset variables
		unset DISPLAY
		unset XAUTHORITY
	done < <(find /tmp/.X11-unix -type s)
}

#start shutdown sequence
shutdown -h +5 &

#send notifications every minute
for time in {5..1}; do
	sendXNotifications $time &
	sleep 60
done

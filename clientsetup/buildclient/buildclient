#!/bin/bash

branch=pheonix

# Import variables:
# arch - containing architecture version
# version - TODO
source /tmp/setup_variables

#Reboot the machine to auto log in to the karoshi user.
REBOOT=yes

#Main list of packages to install (apart from samba4 and SOGo which are compiled).
packages="ethtool pam-exec2 vim browser-plugin-freshplayer-pepperflash python3-tk lightdm-kde-greeter smbclient mesa-utils upstart-sysv libgl1-mesa-dev systemd-sysv unrar whois gtk2-engines atom shellcheck xorg bluegriffon xubuntu-desktop xfce4 indicator-application-gtk2 indicator-sound-gtk2 indicator-multiload xfce4-datetime-plugin xfce4-indicator-plugin xfce4-screenshooter xfce4-terminal xfce4-power-manager xubuntu-artwork shimmer-themes xubuntu-icon-theme thunar-archive-plugin thunar-media-tags-plugin catfish gnome-calculator gnome-system-monitor light-locker lightdm lightdm-gtk-greeter firefox flashplugin-installer thunderbird xul-ext-lightning file-roller filezilla wireshark zenmap virtualbox geogebra stellarium kcolorchooser libreoffice libreoffice-mysql-connector libreoffice-lightproof-en wbritish gedit gedit-plugins scribus planner freemind ttf-dejavu ttf-mscorefonts-installer ttf-freefont dia blender gimp inkscape eog ardour jackd2 qjackctl a2jmidid hydrogen rosegarden musescore pavucontrol qsynth fluid-soundfont-gm lmms yoshimi lame stopmotion gtk-recordmydesktop openshot-qt vlc brasero codeblocks glade netbeans git git-lfs default-jdk icedtea-plugin liblwjgl-java arduino tmux cups printer-driver-all openprinting-ppds cifs-utils libpam-mount krb5-user ntp xautolock yad gnupg ldap-utils synaptic xmlstarlet resolvconf iputils-ping iputils-tracepath iputils-arping net-tools mtr-tiny netcat-openbsd isc-dhcp-client libnss3-tools sssd virtualbox-guest-dkms virtualbox-guest-x11 xserver-xorg-video-all wpasupplicant ssh-krb5 gksu zsh gvfs-backends wine plymouth-x11 rsyslog intltool nano netbeans"

#Utilities and other extras to install.
extrapackages="shimmer-themes light-themes mate-icon-theme tango-icon-theme language-pack-ar libreoffice-l10n-ar language-pack-cs libreoffice-l10n-cs language-pack-da libreoffice-l10n-da language-pack-de libreoffice-l10n-de language-pack-el libreoffice-l10n-el language-pack-es libreoffice-l10n-es language-pack-en libreoffice-l10n-en-gb language-pack-fi libreoffice-l10n-fi language-pack-fr libreoffice-l10n-fr language-pack-he libreoffice-l10n-he language-pack-hi libreoffice-l10n-hi language-pack-id libreoffice-l10n-id language-pack-it libreoffice-l10n-it language-pack-ko libreoffice-l10n-ko language-pack-nb libreoffice-l10n-nb language-pack-nl libreoffice-l10n-nl language-pack-pl libreoffice-l10n-pl language-pack-pt libreoffice-l10n-pt language-pack-ru libreoffice-l10n-ru language-pack-sv libreoffice-l10n-sv language-pack-zh-hans-base libreoffice-l10n-zh-cn fonts-nanum-coding fonts-gargi myspell-en-gb"

#Check that this script is running as root.
if [ `id -u` != 0 ]
then
	echo This script must be run as root.
	exit
fi

#Add required repositories
echo -e "\nAdding required repositories\n"
sleep 1
apt-key update

add-apt-repository -y ppa:openshot.developers/ppa

apt-get update
apt-get install -y sssd samba-common ntp krb5-user
apt-get install -y numix-gtk-theme numix-icon-theme-circle numix
apt-get install -y feh ubiquity-frontend-gtk
apt-get install -y xinit
apt-get install -y xubuntu-desktop

##############################
# ECLIPSE INSTALLATION
##############################

# The eclipse PPA has not been updated since Eclipse 3.8 (Juno)
# The following script will download, verify and install Eclipse Mars for amd64 and i386 architectures.

# Checksum: a7ddf8be89d65e66dc09a54e98b47748  eclipse-java-mars-2-linux-gtk-x86_64.tar.gz (amd64)
# Checksum: 3f0460868e3702c6c8e6e346ae869f54  eclipse-java-mars-2-linux-gtk.tar.gz. (i386)

echo "Begin Eclipse installation."

eclipseDownload="no"
if [ "$ARCH" == "amd64" ]; then
	echo "Architecture is ${ARCH}"
	eclipsePath="/tmp/eclipse-java-mars-2-linux-gtk-x86_64.tar.gz"
	eclipseFolder="/opt/eclipse-java-mars-2-linux-gtk-x86_64"
	eclipseURL="http://www.mirrorservice.org/sites/download.eclipse.org/eclipseMirror/technology/epp/downloads/release/mars/2/eclipse-java-mars-2-linux-gtk-x86_64.tar.gz"
	eclipseDownload="yes"
	eclipseChecksum="a7ddf8be89d65e66dc09a54e98b47748"
elif [ "$ARCH" == "i386" ]; then
	echo "Architecture is ${ARCH}"
	eclipsePath="/tmp/eclipse-java-mars-2-linux-gtk.tar.gz"
	eclipseFolder="/opt/eclipse-java-mars-2-linux-gtk"
	eclipseURL="http://www.mirrorservice.org/sites/download.eclipse.org/eclipseMirror/technology/epp/downloads/release/mars/2/eclipse-java-mars-2-linux-gtk.tar.gz"
	eclipseDownload="yes"
	eclipseChecksum="3f0460868e3702c6c8e6e346ae869f54"
else
	echo "${ARCH} is not a supported architecture."
fi

eclipseInstall="no"
if [ "$eclipseDownload" == "yes" ]; then
	echo "Attempting to download Eclipse."
	wget --timeout=10 -c -O $eclipsePath $eclipseURL
	if [ $? != 0 ]; then
			echo "There was a problem downloading Eclipse."
	fi

	if [ $(md5sum $eclipsePath | cut -d ' ' -f 1) == $eclipseChecksum ]; then
		echo "Verified Eclipse download."
		eclipseInstall="yes"
	else
		echo "Eclipse download failed to validate."
	fi
fi

if [ "$eclipseInstall" == "yes" ]; then
	echo "Attempting to install Eclipse."
	echo "Creating and cleaning Eclipse directory: ${eclipseFolder}"
	[ -d $eclipseFolder ] && rm -rf ${eclipseFolder}/eclipse || mkdir $eclipseFolder
	echo "Extracting Eclipse archive into place."
	tar -zxvf $eclipsePath -C $eclipseFolder
	echo "Creating symlink for karoshi-admin."
	ln -s ${eclipseFolder}/eclipse/eclipse /opt/karoshi-admin/Desktop/eclipse-mars-2
	echo -e "Eclipse installed."
fi

##############################

# Prevent tmp contents from being copied into the ISO.
rm -rf /tmp/*

#Copy /usr/bin files before karoshi user created
cp -r /opt/karoshi/clientsetup/buildclient/config/usr/bin/* /usr/bin

#Create karoshi user
getent passwd karoshi 1>/dev/null
echo -e "Creating karoshi user\n"
sleep 1
useradd -d /opt/karoshi-admin -s /bin/bash -m karoshi
#Set password to karoshi
echo -e "\nSetting karoshi user password to karoshi\n"
sleep 1
echo -e "karoshi\nkaroshi\n" | passwd karoshi

#Extract karoshi home area
echo -e "\nExtracting karoshi home area folder\n"
sleep 1
cp /opt/karoshi/clientsetup/karoshi-home/* /opt/karoshi-admin
cd /opt/karoshi-admin
tar -xvzf *
rm karoshi-*
cd
su karoshi -c "xfconf-query -c xsettings -p /Net/ThemeName -s Greybird"

#Make icons executable
chmod +rwx /opt/karoshi-admin/Desktop/*

chmod 0600 -R /opt/karoshi-admin
chmod u+X -R /opt/karoshi-admin
chown karoshi -R /opt/karoshi-admin

#Make sure that there is an admin grou
getent group admin 1>/dev/null
[ $? != 0 ] && groupadd admin

#Add karoshi user to the admin group
usermod -a -G admin karoshi

#Install software
apt-key update
apt-get update
sleep 4

# Using --allow-unauthenticated temporarily to resolve libxfce4util6 that causes all package installs to cancel.
apt-get install -y --allow-unauthenticated xubuntu-desktop
echo "Installing packages"

sleep 2

	for package in `echo $packages`
	do
		echo -e "\nInstalling $package\n"
		apt-get -y install $package 1>> /var/log/karoshi_build.log 2>> /var/log/karoshi_build.log
		if [ $? != 0 ]
		then
			echo $package: There was a problem installing this package.
			read -t 5 -p "Press return or wait 5 seconds to continue."

		fi
	done

	for package in `echo $extrapackages`
	do
		echo -e "\nInstalling $package\n"
		apt-get -y install $package 1>> /var/log/karoshi_build.log 2>> /var/log/karoshi_build.log
		if [ $? != 0 ]
		then
			echo $package: There was a problem installing this package.
			read -t 5 -p "Press return or wait 5 seconds to continue."
		fi
	done

#Update initramfs
update-initramfs -u

#Copy in etc.conf to autologin karoshi user


#Configure grub
echo -e "\nConfiguring grub2.\n"
cp -f /opt/karoshi/clientsetup/buildclient/config/grub /etc/default/grub
echo -e "\nUpdating grub2.\n"
update-grub

#Remove apport
apt-get remove -y apport

#Remove theme configuration
apt-get remove -y gtk-theme-configuration

#Remove ibus - it was causing /etc/default/keyboard to be ignored
apt-get purge -y --auto-remove ibus 

#Remove gnome-keyring
apt-get remove -y gnome-keyring

#Tidy packages
apt-get -y autoremove

#Remove staff group
groupdel staff

#Copy config files
cd /
mkdir -p /opt/karoshi/images
cp -r /opt/karoshi/clientsetup/buildclient/config/images/* /opt/karoshi/images
cp -r /opt/karoshi/images/* /usr/share/backgrounds
cp -r /opt/karoshi/clientsetup/buildclient/config/configuration/etc/* /etc
cp -r /opt/karoshi/clientsetup/buildclient/config/configuration/lib/* /lib

#Copy /etc files
echo "copying etc files"
sleep 2
cp -r /opt/karoshi/clientsetup/etc/* /etc
cp -r /opt/karoshi/clientsetup/buildclient/config/usr/share/* /usr/share

#Copy images

#Copy more configuration files
echo "Copying config files"
cp -r /opt/karoshi/clientsetup/buildclient/config/usr/share/* /usr/share
cp -r /opt/karoshi/clientsetup/buildclient/config/usr/lib/* /usr/lib
cp -r /opt/karoshi/clientsetup/buildclient/config/usr/bin/* /usr/bin
cp -r /opt/karoshi/clientsetup/skel /etc
cp -r /opt/karoshi/clientsetup/utilities/karoshi-update /etc/init.d
cp -r /opt/karoshi/clientsetup/utilities/karoshi-remount.conf /etc/init
cp -r /opt/karoshi/clientsetup/utilities/karoshi-system-upgrade.conf /etc/init
cp -r /opt/karoshi/clientsetup/utilities/karoshi-cups.conf /etc/init
cp -r /opt/karoshi/clientsetup/utilities/karoshi-idle-shutdown.conf /etc/init
cp -r /opt/karoshi/clientsetup/utilities/karoshi-multicast.conf /etc/init

chmod 0600 /usr/bin/karoshi*
chown karoshi /usr/bin/karoshi*
chown karoshi /opt/karoshi-admin/*
chmod +rwx /opt/karoshi*
chmod +rwx /usr/bin/karoshi*
chown root.root /etc/sssd/*
chmod +rwx /etc/sssd/*
chmod +rwx /etc/init/karoshi*
chmod +rwx /etc/init.d/karoshi*

#Configure unity greeter
echo "[com.canonical.unity-greeter]
draw-user-backgrounds=false
background-color='#000000'
background='/usr/share/backgrounds/background.png'" > /usr/share/glib-2.0/schemas/10_unity_greeter_background.gschema.override 
glib-compile-schemas /usr/share/glib-2.0/schemas/

rm /etc/resolv.conf
ln -s ../run/resolvconf/resolv.conf /etc/resolv.conf
resolvconf -u

#Add in LibreOffice extensions
cd /usr/lib/libreoffice/program
unopkg add --shared /opt/karoshi/clientsetup/config/libreoffice/macroformatteradp-4-0-2.oxt



#Copy plymouth animations
	echo -e "\nSetting karoshi-logo theme as the default theme for plymouth.\n"

	cp -f -r /opt/karoshi/clientsetup/plymouth/* /usr/share/plymouth/themes/
	chmod 0755 /usr/share/plymouth/themes/karoshi-logo/karoshi-logo.plymouth
	update-alternatives --install /usr/share/plymouth/themes/default.plymouth default.plymouth /usr/share/plymouth/themes/karoshi-logo/karoshi-logo.plymouth 100

	SELECT=`update-alternatives --list default.plymouth | grep -n karoshi-logo | cut -d: -f1`
	echo -e "$SELECT\n" | update-alternatives --config default.plymouth | grep karoshi-logo

	update-initramfs -u

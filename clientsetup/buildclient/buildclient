
#!/bin/bash


#Set this to yes if you do not want to stop for errors or help messages.
AUTO=no
#Create the karoshi user
CREATE_KAROSHI_USER=yes
#Add additional repos for zfs yad remastersys and mailscanner.
ADD_REPOS=yes
UPDATE_REPOS=yes
#Install additional software utils.
INSTALL_ADDITIONAL=yes
#Install all of the main software packages needed such as apache and mysql.
INSTALL_SOFTWARE=yes
INSTALL_EXTRA=yes
#We are currently using sysv startup scripts instead of upstart.
SYSVSUPPORT=yes
#Download and compile samba4 - we are staying with a compiled version rather than the version from the repos for backward compatibily with Karoshi V9.
#INSTALL_SAMBA4=yes
#Download and install sogo email 
#INSTALL_SOGO=yes
#Configure sudoers to allow the karoshi user to sudo.
CONFIGURE_SUDOERS=yes
#Purge packages that are no longer required.
TIDYPACKAGES=yes
#Change to a better theme for the karoshi user in xfce.
SET_THEME=yes
#Configure system settings
CONFIGURE_SYSTEM=yes
#Update the system.
UPDATE_SERVER=no
#Services are started and set to run on boot when installed so lets turn them all back off for now until they are actually needed.
TURN_OFF_SERVICES=yes


#Reboot the machine to auto log in to the karoshi user.
REBOOT=yes

#Main list of packages to install (apart from samba4 and SOGo which are compiled).
packages="bluegriffon xubuntu-desktop indicator-application-gtk2 indicator-sound-gtk2 indicator-multiload xfce4-datetime-plugin indicator-plugin xfce4-screenshooter xfce4-terminal xfce4-power-manager xubuntu-artwork shimmer-themes xubuntu-icon-theme thunar-archive-plugin thunar-media-tags-plugin catfish gnome-calculator gnome-system monitor light-locker lightdm lightdm-gtk-greeter firefox flashplugin-installer thunderbird xul-ext lightning file-roller filezilla wireshark zenmap virtualbox geogebra stellarium kcolorchooser libreoffice libreoffice-mysql-connector libreoffice-lightproof-en wbritish gedit gedit-plugins scribus planner freemind ttf-dejavu ttf-mscorefonts-installer ttf-freefont dia blender gimp inkscape eog ardour audacity jackd2 qjackctl a2jmidid hydrogen rosegarden musescore pavucontrol qsynth fluid-soundfont-gm lmms yoshimi lame stopmotion gtk-recordmydesktop openshot vlc brasero codeblocks eclipse glade netbeans  ++ git default-jdk icedtea-plugin liblwjgl-java arduino tmux cups printer-driver-all openprinting-ppds cifs-utils libpam-mount krb5-user ntp xautolock yad gnupg ldap-utils synaptic xmlstarlet resolvconf iputils-ping iputils-tracepath iputils-arping net-tools mtr-tiny netcat-openbsd isc-dhcp-client libnss3 tools sssd virtualbox-guest-utils virtualbox-guest-x11 xserver-xorg-video-all wpasupplicant ssh-krb5 gksu zsh gvfs-backends pam-exec2 wine1.7 plymouth-x11 rsyslog unbound intltool nano"

#Utilities and other extras to install.
extrapackages="language-pack-ar libreoffice-l10n-ar language-pack-cs libreoffice-l10n-cs language-pack-da libreoffice l10n-da language-pack-de libreoffice-l10n-de language-pack-el libreoffice-l10n-el language-pack-es libreoffice-l10n-es language-pack-en libreoffice-l10n-en-gb language-pack-fi libreoffice-l10n-fi language-pack-fr libreoffice-l10n-fr language-pack-he libreoffice-l10n-he language-pack-hi libreoffice-l10n-hi language-pack-id libreoffice-l10n-id language-pack-it libreoffice-l10n-it language-pack-ko libreoffice-l10n-ko language-pack-nb libreoffice-l10n-nb language-pack-nl libreoffice-l10n-nl language-pack-pl libreoffice-l10n-pl language-pack-pt libreoffice-l10n-pt language-pack-ru libreoffice-l10n-ru language-pack-sv libreoffice-l10n-sv language-pack-zh-hans-base libreoffice-l10n-zh-cn fonts-droid fonts nanum-coding fonts-gargi myspell-en-gb"

#Check that this script is running as root.

if [ `id -u` != 0 ]
then
	echo This script must be run as root.
	exit
fi

function add_repos {
#Add required repositories
echo -e "\nAdding required repositories\n"
sleep 1

UBUNTUVER=trusty
[ `lsb_release -a 2>/dev/null | grep -c precise` -gt 0 ] && UBUNTUVER=precise
apt-key adv --keyserver keys.gnupg.net --recv-key 0x810273C4
add-apt-repository -y "deb http://inverse.ca/ubuntu $UBUNTUVER $UBUNTUVER"

#Yad
add-apt-repository -y ppa:webupd8team/y-ppa-manager

function update_repos {
echo -e "\nUpdating repositories\n"
sleep 1
apt-get update
}

function install_seperate {
apt-get -y install feh ubiquity-frontend-gtk
}


function install_additional_software {
#Install software
if [ $INSTALL_EXTRA = yes ]
then
		apt-get -y install $extrapackages
		if [ $? != 0 ]
		then
			echo There was a problem installing the extra packages. Press return to continue.
		fi
else
	for package in `echo $extrapackages`
	do
		echo -e "\nInstalling $package\n"
		sleep 1
		apt-get -y install $package
		if [ $? != 0 ]
		then
			echo $package: There was a problem installing this package. Press return to continue.
			[ $AUTO = no ] && read pause
		fi
	done
fi
}

function install_software {
#Install software


echo -e "\nInstalling main software packages\n"
sleep 1

if [ $INSTALL_SOFTWARE = yes ]
then
		apt-get -y install $packages
		if [ $? != 0 ]
		then
			echo There was a problem installing the packages. Press return to continue.
		fi
else
	for package in `echo $packages`
	do
		echo -e "\nInstalling $package\n"
		sleep 1
		apt-get -y install $package
		if [ $? != 0 ]
		then
			echo $package: There was a problem installing this package. Press return to continue.
			[ $AUTO = no ] && read pause
		fi
	done
fi
}
#Update initramfs
sudo update-initramfs -u

#Configure grub
echo -e "\nConfiguring grub2.\n"
sudo cp -f /opt/karoshi/karoshi-client-pheonix/clientsetup/buildclient/config/grub /etc/default/grub
echo -e "\nUpdating grub2.\n"
update-grub

#Tidy packages
function tidy_packages {
apt-get -y autoremove
}


#Copy config files
mkdir -p /opt/karoshi/images
sudo cp /opt/karoshi/karoshi-client-pheonix/clientsetup/buildclient/config/images/background.png /opt/karoshi/images/background.png

sudo cp -r /opt/karoshi/karoshi-client-pheonix/clientsetup/buildclient/config/configuration/etc/* /etc
sudo cp -r /opt/karoshi/karoshi-client-pheonix/clientsetup/buildclient/config/configuration/lib/* /lib

#Copy /etc files
sudo cp -r /opt/karoshi/karoshi-client-pheonix/clientsetup/etc/* /etc
sudo cp -r /opt/karoshi/karoshi-client-pheonix/clientsetup/buildclient/config/usr/share/* /usr/share

#Copy more configuration files
sudo cp -r /opt/karoshi/karoshi-client-pheonix/clientsetup/buildclient/config/usr/share/* /usr/share
sudo cp -r /opt/karoshi/karoshi-client-pheonix/clientsetup/buildclient/config/usr/lib/* /usr/lib
sudo cp -r /opt/karoshi/karoshi-client-pheonix/clientsetup/buildclient/config/usr/bin/* /usr/bin
sudo cp -r /opt/karoshi/karoshi-client-pheonix/clientsetup/skel/* /etc/skel
sudo cp /opt/karoshi/karoshi-client-pheonix/clientsetup/utilities/karoshi-update.conf /etc/init
sudo cp /opt/karoshi/karoshi-client-pheonix/clientsetup/utilities/karoshi-remount.conf /etc/init
sudo cp /opt/karoshi/karoshi-client-pheonix/clientsetup/utilities/karoshi-system-upgrade.conf /etc/init
sudo cp /opt/karoshi/karoshi-client-pheonix/clientsetup/utilities/karoshi-cups.conf /etc/init
sudo cp /opt/karoshi/karoshi-client-pheonix/clientsetup/utilities/karoshi-idle-shutdown.conf /etc/init
sudo cp /opt/karoshi/karoshi-client-pheonix/clientsetup/utilities/karoshi-multicast.conf /etc/init


function configure_sudoers {
#Configure sudoers
cp /opt/karoshi/serversetup/all/configfiles/sudoers /etc
chown root:root /etc/sudoers
}

#!/bin/bash

branch=pheonix


#Reboot the machine to auto log in to the karoshi user.
REBOOT=yes

#Main list of packages to install (apart from samba4 and SOGo which are compiled).
packages="atom shellcheck xorg bluegriffon xubuntu-desktop xfce4 indicator-application-gtk2 indicator-sound-gtk2 indicator-multiload xfce4-datetime-plugin xfce4-indicator-plugin xfce4-screenshooter xfce4-terminal xfce4-power-manager xubuntu-artwork shimmer-themes xubuntu-icon-theme thunar-archive-plugin thunar-media-tags-plugin catfish gnome-calculator gnome-system-monitor light-locker lightdm lightdm-gtk-greeter firefox flashplugin-installer thunderbird lightning-extension file-roller filezilla wireshark zenmap virtualbox geogebra stellarium kcolorchooser libreoffice libreoffice-mysql-connector libreoffice-lightproof-en wbritish gedit gedit-plugins scribus planner freemind ttf-dejavu ttf-mscorefonts-installer ttf-freefont dia blender gimp inkscape eog ardour audacity jackd2 qjackctl a2jmidid hydrogen rosegarden musescore pavucontrol qsynth fluid-soundfont-gm lmms yoshimi lame stopmotion gtk-recordmydesktop openshot vlc brasero codeblocks eclipse glade netbeans git git-lfs default-jdk icedtea-plugin liblwjgl-java arduino tmux cups printer-driver-all openprinting-ppds cifs-utils libpam-mount krb5-user ntp xautolock yad gnupg ldap-utils synaptic xmlstarlet resolvconf iputils-ping iputils-tracepath iputils-arping net-tools mtr-tiny netcat-openbsd isc-dhcp-client libnss3-tools sssd virtualbox-guest-utils virtualbox-guest-x11 xserver-xorg-video-all wpasupplicant ssh-krb5 gksu zsh gvfs-backends pam-exec2 wine plymouth-x11 rsyslog unbound intltool nano netbeans-installer"

#Utilities and other extras to install.
extrapackages="language-pack-ar libreoffice-l10n-ar language-pack-cs libreoffice-l10n-cs language-pack-da libreoffice-l10n-da language-pack-de libreoffice-l10n-de language-pack-el libreoffice-l10n-el language-pack-es libreoffice-l10n-es language-pack-en libreoffice-l10n-en-gb language-pack-fi libreoffice-l10n-fi language-pack-fr libreoffice-l10n-fr language-pack-he libreoffice-l10n-he language-pack-hi libreoffice-l10n-hi language-pack-id libreoffice-l10n-id language-pack-it libreoffice-l10n-it language-pack-ko libreoffice-l10n-ko language-pack-nb libreoffice-l10n-nb language-pack-nl libreoffice-l10n-nl language-pack-pl libreoffice-l10n-pl language-pack-pt libreoffice-l10n-pt language-pack-ru libreoffice-l10n-ru language-pack-sv libreoffice-l10n-sv language-pack-zh-hans-base libreoffice-l10n-zh-cn fonts-nanum-coding fonts-gargi myspell-en-gb"

#Check that this script is running as root.

if [ `id -u` != 0 ]
then
	echo This script must be run as root.
	exit
fi

#Add required repositories
echo -e "\nAdding required repositories\n"
sleep 1
apt-key update
apt-get update

apt-get install -y feh ubiquity-frontend-gtk
apt-get install -y xinit

# Get architecture version for reference when downloading packages
ARCH=""
BUILDCLIENT=""
. ./opt/tmp/build_client.sh
. .$BUILDCLIENT/opt/tmp/arch.sh

[ "$ARCH" == "" ] && echo -e "\nNo architecture present in /tmp/arch.sh\n"

# Checksum: a7ddf8be89d65e66dc09a54e98b47748  eclipse-java-mars-2-linux-gtk-x86_64.tar.gz
# Checksum: 3f0460868e3702c6c8e6e346ae869f54  eclipse-java-mars-2-linux-gtk.tar.gz.

echo -e "\nAttempting to download eclipse."
installEclipse="no"
# Download eclipse
if [ "$ARCH" == "amd64" ]; then
	wget --timeout=10 -O /tmp/eclipse-java-mars-2-linux-gtk-x86_64.tar.gz "http://www.eclipse.org/downloads/download.php?file=/technology/epp/downloads/release/mars/2/eclipse-java-mars-2-linux-gtk-x86_64.tar.gz&r=1"
	wgetOut=$?
	if [ $wgetOut != 0 ]; then
			# The download failed.
			echo "There was a problem downloading eclipse, skipping."
	fi

	checksum=$(md5sum "/tmp/eclipse-java-mars-2-linux-gtk-x86_64.tar.gz" | cut -d ' ' -f 1)
	if [ "$checksum" != "a7ddf8be89d65e66dc09a54e98b47748" ]; then
		echo "There was a problem validating the archive, skipping."
	else
		echo "Archive validated."
		installEclipse="yes"
	fi
elif [ "$ARCH" == "i386" ]; then
	wget --timeout=10 -O /tmp/eclipse-java-mars-2-linux-gtk.tar.gz "http://www.eclipse.org/downloads/download.php?file=/technology/epp/downloads/release/mars/2/eclipse-java-mars-2-linux-gtk.tar.gz&r=1"
	wgetOut=$?
	if [ $wgetOut != 0 ]; then
			# The download failed.
			echo "There was a problem downloading eclipse, skipping."
	fi

	checksum=$(md5sum "/tmp/eclipse-java-mars-2-linux-gtk.tar.gz" | cut -d ' ' -f 1)
	if [ "$checksum" != "3f0460868e3702c6c8e6e346ae869f54" ]; then
		echo "There was a problem validating the archive, skipping."
	else
		echo "Archive validated."
		installEclipse="yes"
	fi
fi

if [ "$installEclipse" == "yes" ]; then
	if [ "$ARCH" == "amd64" ]; then
		echo -e "\nExtracting eclipse archive."
		tar -zxvf /tmp/eclipse-java-mars-2-linux-gtk-x86_64.tar.gz
		echo -e "\nMoving eclipse into place."
		mv /tmp/eclipse-java-mars-2-linux-gtk-x86_64 /opt
	fi
	if [ "$ARCH" == "i386" ]; then
		echo -e "\nExtracting eclipse archive."
		tar -zxvf /tmp/eclipse-java-mars-2-linux-gtk.tar.gz
		echo -e "\nMoving eclipse into place."
		mv /tmp/eclipse-java-mars-2-linux-gtk.tar.gz /opt
	fi
	echo -e "\nEclipse installed."
fi

# Install sources for kxstudio-team/ppa as its PPA is obselete
# See http://kxstudio.linuxaudio.org/Repositories
echo -e "\nAttempting to download sources list for kxstudio-team/ppa."

# Checksum: 7ea382267e24925e09b087c5af1e5daa *kxstudio-repos-gcc5_9.2.2-kxstudio1_all.deb

# Download sources for kxstudio-team/ppa.
wget --timeout=10 -O /tmp/kxstudio-repos-gcc5_9.2.2~kxstudio1_all.deb https://launchpad.net/~kxstudio-debian/+archive/kxstudio/+files/kxstudio-repos-gcc5_9.2.2~kxstudio1_all.deb
wgetOut=$?
if [ $wgetOut != 0 ]; then
		# The download failed.
		echo "There was a problem downloading sources for kxstudio-team/ppa, skipping."
fi

checksum=$(md5sum "/tmp/kxstudio-repos-gcc5_9.2.2~kxstudio1_all.deb" | cut -d ' ' -f 1)
if [ "$checksum" != "7ea382267e24925e09b087c5af1e5daa" ]; then
	echo "There was a problem validating the archive, skipping."
else
	echo "Archive validated."
	dpkg -i "/tmp/kxstudio-repos-gcc5_9.2.2~kxstudio1_all.deb"
	echo -e "\nSources for kxstudio-team/ppa installed."
fi

#Create karoshi user
getent passwd karoshi 1>/dev/null
echo -e "Creating karoshi user\n"
sleep 1
useradd -d /opt/karoshi-admin -s /bin/bash -m karoshi
#Set password to karoshi
echo -e "\nSetting karoshi user password to karoshi\n"
sleep 1
echo -e "karoshi\nkaroshi\n" | passwd karoshi

#Extract karoshi home area
echo -e "\nExtracting karoshi home area folder\n"
sleep 1
cp /opt/karoshi/clientsetup/karoshi-home/* /opt/karoshi-admin
cd /opt/karoshi-admin
tar -xvzf *
rm karoshi-*
cd
chmod 0600 -R /opt/karoshi-admin
chmod u+X -R /opt/karoshi-admin
chown karoshi -R /opt/karoshi-admin

#Make sure that there is an admin group
getent group admin 1>/dev/null
[ $? != 0 ] && groupadd admin

#Add karoshi user to the admin group
usermod -a -G admin karoshi

#Install software
apt-key update
apt-get update
sleep 4

# Using --allow-unauthenticated temporarily to resolve libxfce4util6 that causes all package installs to cancel.
apt-get install -y --allow-unauthenticated xubuntu-desktop
echo "Installing packages"

apt-get install -y $packages

apt-get install -y $extrapackages

#Update initramfs
update-initramfs -u

#Configure grub
echo -e "\nConfiguring grub2.\n"
cp -f /opt/karoshi/clientsetup/buildclient/config/grub /etc/default/grub
echo -e "\nUpdating grub2.\n"
update-grub

#Tidy packages
apt-get autoremove

su karoshi -c "xfconf-query -c xsettings -p /Net/ThemeName -s Greybird"
#Copy config files
cd /
mkdir -p /opt/karoshi/images
cp /opt/karoshi/clientsetup/buildclient/config/images/* /opt/karoshi/images

cp /opt/karoshi/clientsetup/buildclient/config/configuration/etc/* /etc
cp /opt/karoshi/clientsetup/buildclient/config/configuration/lib/* /lib

#Copy /etc files
echo "copying etc files"
sleep 2
cp /opt/karoshi/clientsetup/etc/* /etc
cp /opt/karoshi/clientsetup/buildclient/config/usr/share/* /usr/share

#Copy images

#Copy more configuration files
echo "Copying config files"
cp /opt/karoshi/clientsetup/buildclient/config/usr/share/* /usr/share
cp /opt/karoshi/clientsetup/buildclient/config/usr/lib/* /usr/lib
cp /opt/karoshi/clientsetup/buildclient/config/usr/bin/* /usr/bin
cp /opt/karoshi/clientsetup/skel/* /etc/skel
cp /opt/karoshi/clientsetup/utilities/karoshi-update.conf /etc/init
cp /opt/karoshi/clientsetup/utilities/karoshi-remount.conf /etc/init
cp /opt/karoshi/clientsetup/utilities/karoshi-system-upgrade.conf /etc/init
cp /opt/karoshi/clientsetup/utilities/karoshi-cups.conf /etc/init
cp /opt/karoshi/clientsetup/utilities/karoshi-idle-shutdown.conf /etc/init
cp /opt/karoshi/clientsetup/utilities/karoshi-multicast.conf /etc/init

chmod 0600 /usr/bin/karoshi*
chown karoshi -R /usr/bin/karoshi*
chmod u+X -R /usr/bin/karoshi*
chmod
#Copy plymouth animations
rm /usr/share/plymouth/themes/*
cp /opt/karoshi/clientsetup/plymouth/* /usr/share/plymouth/themes

#Needed to run after install software
rm /var/lib/dbus/machine-id
